name: CI

on:
  push:
    branches:
    - master

  pull_request:
    branches:
    - master

  workflow_dispatch:

jobs:

  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        config:
          - Debug
          - Release
    name: Test ${{ matrix.os }} ${{ matrix.config }}
    env:
      framework: net6.0

    steps:

      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Test Coverage
        run: ./coverage.sh ${{ env.framework }} ${{ matrix.config }}

  code-coverage:
    runs-on: ubuntu-latest
    name: Code coverage
    env:
      framework: net6.0

    steps:

      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Test Coverage
        run: ./coverage.sh ${{ env.framework }} Release

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./test/TestResults/output/coverage.${{ env.framework }}.cobertura.xml
          fail_ci_if_error: true

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./test/TestResults/output/coverage.${{ env.framework }}.info

      - name: Shellcheck
        run: >-
          find . -type f -name '*.sh' |
          wc -l && find . -type f -name '*.sh' |
          xargs shellcheck --external-sources --color=always

  ######################################################################################################################
  ## docker-tests executes the developer helper docker targets to ensure they continue to work and are not out of date.
  docker-tests:
    runs-on: ubuntu-latest
    name: Docker Tests
    timeout-minutes: 5
    permissions:
      contents: read
    env:
      DOCKER_BUILDKIT: 1

    steps:

      - uses: actions/checkout@v3

      - name: Docker test
        run: docker build --target test .

      - name: Docker ShellCheck
        run: docker build --target shellcheck .
